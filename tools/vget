#!/bin/bash
VS_URL="https://git.vorax.org/Henry/VScript.git"

isFallback(){
  if [ "$FALLBACK" == "true" ]
  then
    return 1
  else
    if which dialog
    then
      return 0
    else
      return 1
    fi
  fi
}

textBox(){
  if isFallback
  then
    dialog --backtitle "Vget" --title "$1" --infobox "$2" 0 0
  else
    clear
    echo "$1:"
    echo "$2"
  fi
}

dl(){
  rm -rf VScript
  git clone $VS_URL 2>/dev/null &
  pid=$! # Process Id of the previous running command
  spin='-\|/'
  i=0
  while kill -0 $pid 2>/dev/null
  do
    i=$(( (i+1) %4 ))
    textBox "Download Manager" "Downloading VScript\n${spin:i:1}"
    sleep .1
  done
}

getLibs(){
  for i in $(find src -maxdepth 1 -mindepth 1)
  do
    echo $(basename $i)
  done
}



selectLibs(){
  rm -rf src/*/.en

  # Make the menu builder files
  rm -rf .menubuildfile && touch .menubuildfile

  # Get The Ammount Of libraries we have
  LIBSCOUNT=$(ls -1 ./src/ | wc -l)

  # Echo the begining of the command without a newline and esaping correctly
  echo -ne "--checklist \"Select Libraries To Compile\" 0 0 $LIBSCOUNT " >> .menubuildfile

  #Build a dialog
  LIBRARIES=$(ls src/)
  COUNT=1
  for lib in $LIBRARIES
  do
    echo -ne "$COUNT \"$lib\" off " >> .menubuildfile
    COUNT=$(($COUNT+1))
  done

  #Get output of dialog and
  OUTPUT=$(dialog --file .menubuildfile 3>&1 1>&2 2>&3)
  OUTARR=($OUTPUT)
  LIBARR=($LIBRARIES)
  for i in $OUTARR
  do
    echo -n "" > src/${LIBARR[$i-1]}/.en
  done
}
selectLibsFallback(){
  rm -rf src/*/.en
  # Get The Ammount Of libraries we have
  LIBSCOUNT=$(ls -1 ./src/ | wc -l)

  LIBRARIES=$(ls src/)
  echo "Comma Seperated list of library numbers"
  COUNT=1
  for lib in $LIBRARIES
  do
    echo "$COUNT) $lib"
    COUNT=$(expr $COUNT + 1)
  done

  read OUTPUT
  LIBARR=($LIBRARIES)
  OLDIFS=$IFS
  IFS=,
  for i in $OUTPUT
  do
    echo -n "" > src/${LIBARR[$i-1]}/.en
  done
  IFS=$OLDIFS
  unset OLDIFS
}

OUT=$(dialog --backtitle "Vget" \
--menu "Select VScript Components:" 0 0 4 \
1 "Get Latest VScript Release" \
2 "Don't Compile source" \
3 "Compile VScript source" \
4 "Exit" \
3>&1 1>&2 2>&3)


case $OUT in
	"1")
		dl
		cd VScript
    if isFallback
    then
      selectLibs
    else
      selectLibsFallback
    fi
    textBox "Build Info" "`./mkruntime buildlibs`"
    sleep 1s
		textBox "Build Info" "`./mkruntime build`"
    sleep 1s
		rm README.md help-template updatevramen vs-version-data
    sleep 1s
    textBox "Build Info" "Done"
    exit
		;;
	"2")
		dl
		textBox "Build Info" "Done"
    exit
		;;
	"3")
    if [ ! -e "mkruntime" ]
    then
      textbox "ERROR: Not in VScript source directory" "Not in a working VScript source setup. Exiting"
      exit
    fi

    if isFallback
    then
      selectLibsFallback
    else
      selectLibs
    fi
    textBox "Build Info" "`./mkruntime buildlibs`"
    sleep 1s
		textBox "Build Info" "`./mkruntime build`"
    sleep 1s
		rm README.md help-template updatevramen vs-version-data
    sleep 1s
    textBox "Build Info" "Done"
    ;;
	"4")
		exit
		;;
esac
