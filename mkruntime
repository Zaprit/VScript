#!/bin/bash
source vs-version-data
info(){
echo -e "VScript runtime builder V1.0 for VScript $VS_VERSION $VS_CODENAME\n"
}

buildlibs(){
  cd src
  for lib in $(ls ./)
  do
    if [ -e $lib/.en ]
    then
      cd $lib
      ./vramen
      cd ../
    fi
  done
  cd ..
}

build(){
  touch vsruntime.base
  echo "Created empty vsruntime.base"

  echo 'VS_VERSION='$VS_VERSION > vsruntime.base
  echo 'VS_CODENAME='"\"$VS_CODENAME\"" >> vsruntime.base
  echo '' >> vsruntime.base
  echo '#Pregenerated code ahead. Here be dragons?' >> vsruntime.base
  echo "Added built in variables"

  cat help-template >> vsruntime.base
  echo "Added help script"

  for lib in $(ls src); do
    if [ -e "src/$lib/.en" ]
    then
      cat "src/$lib/out.vlib" >> vsruntime.base
      echo -e "\n# end of library $lib \n" >> vsruntime.base
    fi
  done
}

clean(){
  rm vsruntime.base
  echo "Cleaned base"
}

enlib(){
 touch src/$1/.en
}

dislib(){
 rm src/$1/.en
}

lslibs(){
 for i in $(ls src)
  if [ -e src/$i/.en ]
  then
   ENLIBS=$ENLIBS\n$i
  else
   DISLIBS=$DISLIBS\n$i
  fi
 done
 echo "Enabled Libraries:"
 echo -e "$ENLIBS"
}

help(){
echo "VScript mkruntime 1.0"
echo "help      —— Shows this help"
echo "clean     —— Cleans Runtime"
echo "build     —— Builds vsruntime.base"
echo "buildlibs —— Build all enabled libraries in the src folder"
echo "enlib     —— Enable library"
echo "dislib    —— Disable library"
echo "lslibs    —— List Libraries"
}


$1
EXIT_STATUS=$?
if [ "$1" == "" ] || [ "$EXIT_STATUS" != "0" ]
then
help
fi
